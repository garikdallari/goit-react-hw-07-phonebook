{"version":3,"sources":["redux/actions/contacts.js","redux/reducers/filter.js","redux/reducers/contacts.js","redux/reducers/index.js","redux/store.js","Components/ContactForm/ContactForm.styled.jsx","Components/Utils/Button/Button.styled.jsx","Components/Utils/Button/Button.jsx","Components/Utils/Title/Title.styled.jsx","Components/Utils/Title/Title.jsx","Components/Utils/Input/Input.styled.jsx","Components/Utils/Input/Input.jsx","Components/ContactForm/ContactForm.jsx","Components/ContactItem/ContactItem.styled.jsx","Components/ContactItem/ContactItem.jsx","Components/ContactList/Contacts.styled.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Components/Utils/Container/Container.styled.jsx","Components/Utils/Container/Container.jsx","App.js","index.js"],"names":["addContact","createAction","data","payload","id","nextId","name","number","deleteContact","filterContact","filterReducer","createReducer","state","action","contactsReducer","filter","contact","reducer","combineReducers","items","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","contacts","persistReducer","devTools","process","exportedObj","persistor","persistStore","Form","styled","form","Btn","button","Button","text","onClick","title","PageTitle","h2","props","size","color","marginR","marginL","marginT","Title","Field","input","Input","value","type","onChange","placeholder","connect","dispatch","onSubmit","useState","setName","setNumber","handleChange","e","target","preventDefault","find","toLowerCase","alert","pattern","required","Name","p","Number","ContactItem","List","ul","Item","li","filterByName","includes","onDeleteContact","map","Wrapper","div","Container","children","App","style","border","width","padding","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"6TAYaA,EAAaC,YAAa,gBAAgB,SAACC,GAAD,MAAW,CAChEC,QAAS,CACPC,GAAIC,MACJC,KAAMJ,EAAKI,KACXC,OAAQL,EAAKK,YAQJC,EAAgBP,YAAa,mBAO7BQ,EAAgBR,YAAa,mBCd3BS,EAJOC,YAAc,GAAD,eAChCF,GAAgB,SAACG,EAAOC,GAAR,OAAmBA,EAAOV,YCM9BW,EANSH,YAXH,IAWgB,mBAClCX,GAAa,SAACY,EAAOC,GAAR,4BAAuBD,GAAvB,CAA8BC,EAAOV,aADhB,cAElCK,GAAgB,SAACI,EAAOC,GAAR,OACfD,EAAMG,QAAO,SAACC,GAAD,OAAaH,EAAOV,UAAYa,EAAQZ,SAHpB,ICTxBa,EAAUC,YAAgB,CACrCC,MAAOL,EACPC,OAAQL,ICWJU,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGIC,EAAwB,CAC5BC,IAAK,WACLC,YACAC,UAAW,CAAC,WAGRC,EAAQC,YAAe,CAC3BnB,QAAS,CACPoB,SAAUC,YAAeP,EAAuBd,IAElDG,aAEAmB,UAAUC,IASGC,EAJK,CAClBN,QACAO,UAJgBC,YAAaR,I,oCCxClBS,EAAOC,IAAOC,KAAV,8C,QCAJC,EAAMF,IAAOG,OAAV,mG,OCSDC,I,EAAAA,EARf,YAA2C,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,MAC/B,OACE,cAACL,EAAD,CAAKK,MAAOA,EAAOD,QAASA,EAA5B,SACGD,KCJMG,EAAYR,IAAOS,GAAV,qIACP,SAACC,GAAD,OAAWA,EAAMC,QACrB,SAACD,GAAD,OAAWA,EAAME,SACV,SAACF,GAAD,OAAWA,EAAMG,WAClB,SAACH,GAAD,OAAWA,EAAMI,WAClB,SAACJ,GAAD,OAAWA,EAAMK,WCUlBC,I,EAAAA,EAdf,YAAkE,IAAjDD,EAAgD,EAAhDA,QAASF,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,QAAST,EAAqB,EAArBA,KAAMM,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACtD,OACE,cAACJ,EAAD,CACEO,QAASA,EACTF,QAASA,EACTC,QAASA,EACTF,MAAOA,EACPD,KAAMA,EALR,SAOGN,KCVMY,EAAQjB,IAAOkB,MAAV,6LCaHC,MAZf,YAA8D,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,KAAM5D,EAA+B,EAA/BA,KAAM6D,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAC5C,OACE,cAACN,EAAD,CACEM,YAAaA,EACbH,MAAOA,EACPC,KAAMA,EACN5D,KAAMA,EACN6D,SAAUA,KC8EhB,I,IAQeE,eARS,SAACzD,GAAD,MAAY,CAClCyB,SAAUzB,EAAMyB,SAASlB,UAGA,SAACmD,GAAD,MAAe,CACxCC,SAAU,SAACrE,GAAD,OAAUoE,EAAStE,EAAWE,QAG3BmE,EAtFf,YAA8C,IAAvBhC,EAAsB,EAAtBA,SAAUkC,EAAY,EAAZA,SAC/B,EAAwBC,mBAAS,IAAjC,mBAAOlE,EAAP,KAAamE,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOjE,EAAP,KAAemE,EAAf,KACMC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBvE,EAAR,EAAQA,KAAM2D,EAAd,EAAcA,MAEd,OAAQ3D,GACN,IAAK,OACHmE,EAAQR,GACR,MACF,IAAK,SACHS,EAAUT,GACV,MACF,QACE,SA8BN,OACE,eAACrB,EAAD,CAAM2B,SA3Ba,SAACK,GAMpB,GALAA,EAAEE,iBAEyBzC,EAAS0C,MAClC,SAAC/D,GAAD,OAAaA,EAAQV,KAAK0E,gBAAkB1E,EAAK0E,iBAMjD,OAHAC,MAAM,GAAD,OAAI3E,EAAJ,4BACLmE,EAAQ,SACRC,EAAU,KAGC,KAATpE,GAA0B,KAAXC,IAIN,KAATD,GAA0B,KAAXC,GAKnBgE,EAAS,CAAEjE,OAAMC,WACjBkE,EAAQ,IACRC,EAAU,KAVRO,MAAM,6BAcR,UACE,cAAC,EAAD,CAAOvB,QAAS,GAAIF,KAAM,GAAIN,KAAK,SACnC,cAAC,EAAD,CACEkB,YAAY,eACZH,MAAO3D,EACP4D,KAAK,OACL5D,KAAK,OACL4E,QAAQ,yHACR9B,MAAM,kcACN+B,UAAQ,EACRhB,SAAUQ,IAEZ,cAAC,EAAD,CAAOjB,QAAS,GAAIC,QAAS,GAAIH,KAAM,GAAIN,KAAK,WAChD,cAAC,EAAD,CACEkB,YAAY,iBACZH,MAAO1D,EACP2D,KAAK,MACL5D,KAAK,SACL4E,QAAQ,yFACR9B,MAAM,giBACN+B,UAAQ,EACRhB,SAAUQ,IAEZ,cAAC,EAAD,CACEvB,MAAM,kBACNF,KAAM,cAAC,IAAD,CAAaM,KAAM,GAAIC,MAAM,YACnCD,KAAM,GACNU,KAAK,iBChFAkB,EAAOvC,IAAOwC,EAAV,gDAGJC,EAASzC,IAAOwC,EAAV,0BCcJE,I,IAAAA,GAff,YAAmC,IAAZvE,EAAW,EAAXA,QACrB,OACE,qCACE,cAACoE,EAAD,UAAOpE,EAAQV,OACf,cAAC,EAAD,UAASU,EAAQT,aCNViF,GAAO3C,IAAO4C,GAAV,mEAIJC,GAAO7C,IAAO8C,GAAV,oECiCjB,IAAMC,GAAe,SAAChF,GACpB,OAAOA,EAAMyB,SAASlB,MAAMJ,QAAO,SAACC,GAAD,OACjCA,EAAQV,KAAK0E,cAAca,SAASjF,EAAMyB,SAAStB,OAAOiE,mBAY/CX,gBARS,SAACzD,GAAD,MAAY,CAClCyB,SAAUuD,GAAahF,OAGE,SAAC0D,GAAD,MAAe,CACxCwB,gBAAiB,SAAC1F,GAAD,OAAQkE,EAAS9D,EAAcJ,QAGnCiE,EA7Cf,YAAqD,IAA9BhC,EAA6B,EAA7BA,SAAUyD,EAAmB,EAAnBA,gBAC/B,OACE,mCACE,cAACN,GAAD,UACGnD,EAAS0D,KAAI,SAAC/E,GAAD,OACZ,eAAC0E,GAAD,WACE,cAAC,GAAD,CAAa1E,QAASA,IACtB,cAAC,EAAD,CACEoC,MAAM,uBACNF,KAAM,cAAC,IAAD,CAAiBO,MAAM,UAAUD,KAAM,KAC7CU,KAAK,SACLf,QAAS,kBAAM2C,EAAgB9E,EAAQZ,SANhCY,EAAQZ,cCS7B,I,GAQeiE,gBARS,SAACzD,GAAD,MAAY,CAClCqD,MAAOrD,EAAMG,WAGY,SAACuD,GAAD,MAAe,CACxCH,SAAU,SAACS,GAAD,OAAON,EAAS7D,EAAcmE,EAAEC,OAAOZ,YAGpCI,EAvBf,YAAsC,IAApBJ,EAAmB,EAAnBA,MAAOE,EAAY,EAAZA,SACvB,OACE,qCACE,cAAC,EAAD,CAAOX,KAAM,GAAIN,KAAK,0BACtB,cAAC,EAAD,CACEkB,YAAY,2BACZF,KAAK,OACL5D,KAAK,SACL2D,MAAOA,EACPE,SAAUA,UCdL6B,GAAUnD,IAAOoD,IAAV,+HCKLC,OAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,cAACH,GAAD,UAAUG,KCsCJC,OApCf,WAiBE,OACE,eAAC,GAAD,WACE,cAAC,EAAD,CAAO3C,MAAM,UAAUD,KAAM,GAAIN,KAAK,cACtC,qBACEmD,MAAO,CACLC,OAAQ,iBACRC,MAAO,cACPC,QAAS,QAJb,SAOE,cAAC,EAAD,MAEF,cAAC,GAAD,IACA,cAAC,EAAD,CAAO5C,QAAS,GAAIJ,KAAM,GAAIN,KAAK,aACnC,cAAC,GAAD,QC5BNuD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUxE,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,CAAayE,QAAS,KAAMlE,UAAWP,EAAMO,UAA7C,SACE,cAAC,GAAD,UAINmE,SAASC,eAAe,W","file":"static/js/main.5a0fc493.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n// import { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACT } from \"../types\";\nimport nextId from \"react-id-generator\";\n\n// export const addContact = (data) => ({\n//   type: ADD_CONTACT,\n//   payload: {\n//     id: nextId(),\n//     name: data.name,\n//     number: data.number,\n//   },\n// });\nexport const addContact = createAction(\"contacts/add\", (data) => ({\n  payload: {\n    id: nextId(),\n    name: data.name,\n    number: data.number,\n  },\n}));\n\n// export const deleteContact = (id) => ({\n//   type: DELETE_CONTACT,\n//   payload: id,\n// });\nexport const deleteContact = createAction(\"contacts/delete\");\n\n// export const filterContact = (value) => ({\n//   type: FILTER_CONTACT,\n//   payload: value,\n// });\n\nexport const filterContact = createAction(\"contacts/filter\");\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { filterContact } from \"../actions/contacts\";\n// import { FILTER_CONTACT } from \"../types\";\n\n// const filterReducer = (state = \"\", action) => {\n//   switch (action.type) {\n//     case FILTER_CONTACT:\n//       return action.payload;\n//     default:\n//       return state;\n//   }\n// };\n\nconst filterReducer = createReducer(\"\", {\n  [filterContact]: (state, action) => action.payload,\n});\n\nexport default filterReducer;\n","import { createReducer } from \"@reduxjs/toolkit\";\n// import { ADD_CONTACT, DELETE_CONTACT } from \"../types\";\nimport { addContact, deleteContact } from \"../actions/contacts\";\nconst initialState = [];\n// const contactsReducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case ADD_CONTACT:\n//       return [...state, action.payload];\n//     case DELETE_CONTACT:\n//       return state.filter((contact) => action.payload !== contact.id);\n//     default:\n//       return state;\n//   }\n// };\nconst contactsReducer = createReducer(initialState, {\n  [addContact]: (state, action) => [...state, action.payload],\n  [deleteContact]: (state, action) =>\n    state.filter((contact) => action.payload !== contact.id),\n});\n\nexport default contactsReducer;\n","import { combineReducers } from \"redux\";\n\nimport filterReducer from \"./filter\";\nimport contactsReducer from \"./contacts\";\n\nexport const reducer = combineReducers({\n  items: contactsReducer,\n  filter: filterReducer,\n});\n","// import { createStore } from \"redux\";\n// import { devToolsEnhancer } from \"redux-devtools-extension\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport { reducer } from \"./reducers\";\n\n// const store = createStore(rootReducer, devToolsEnhancer());\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, reducer),\n  },\n  middleware,\n\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nconst exportedObj = {\n  store,\n  persistor,\n};\nexport default exportedObj;\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: flex;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Btn = styled.button`\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport { Btn } from \"./Button.styled\";\n\nfunction Button({ text, onClick, title }) {\n  return (\n    <Btn title={title} onClick={onClick}>\n      {text}\n    </Btn>\n  );\n}\n\nexport default Button;\n","import styled from \"@emotion/styled\";\n\nexport const PageTitle = styled.h2`\n  font-size: ${(props) => props.size}px;\n  color: ${(props) => props.color};\n  margin-right: ${(props) => props.marginR}px;\n  margin-left: ${(props) => props.marginL}px;\n  margin-top: ${(props) => props.marginT}px;\n`;\n","import React from \"react\";\nimport { PageTitle } from \"./Title.styled\";\n\nfunction Title({ marginT, marginR, marginL, text, size, color }) {\n  return (\n    <PageTitle\n      marginT={marginT}\n      marginR={marginR}\n      marginL={marginL}\n      color={color}\n      size={size}\n    >\n      {text}\n    </PageTitle>\n  );\n}\n\nexport default Title;\n","import styled from \"@emotion/styled\";\n\nexport const Field = styled.input`\n  width: 300px;\n  border: none;\n  border-bottom: 1px solid gray;\n  background-color: transparent;\n\n  &:hover {\n    border-bottom: 1px solid #000d59;\n  }\n`;\n","import React from \"react\";\nimport { Field } from \"./Input.styled\";\n\nfunction Input({ value, type, name, onChange, placeholder }) {\n  return (\n    <Field\n      placeholder={placeholder}\n      value={value}\n      type={type}\n      name={name}\n      onChange={onChange}\n    />\n  );\n}\n\nexport default Input;\n","import { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../redux/actions/contacts\";\nimport PropTypes from \"prop-types\";\nimport { Form } from \"./ContactForm.styled\";\nimport { MdPersonAdd } from \"react-icons/md\";\nimport Button from \"../Utils/Button/Button\";\nimport Title from \"../Utils/Title/Title\";\nimport Input from \"../Utils/Input/Input\";\n\nfunction ContactForm({ contacts, onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const checkOnSameContact = contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (checkOnSameContact) {\n      alert(`${name} is already in contacts`);\n      setName(\"\");\n      setNumber(\"\");\n      return;\n    }\n    if (name === \"\" && number === \"\") {\n      alert(\"Please fill empty fields\");\n      return;\n    }\n    if (name === \"\" || number === \"\") {\n      alert(\"Please fill empty fields\");\n      return;\n    }\n\n    onSubmit({ name, number });\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Title marginR={15} size={18} text=\"Name\" />\n      <Input\n        placeholder=\"type name...\"\n        value={name}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChange}\n      />\n      <Title marginR={15} marginL={30} size={18} text=\"Number\" />\n      <Input\n        placeholder=\"type number...\"\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        onChange={handleChange}\n      />\n      <Button\n        title=\"Add to contacts\"\n        text={<MdPersonAdd size={50} color=\"#187bcd\" />}\n        size={20}\n        type=\"submit\"\n      />\n    </Form>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (data) => dispatch(addContact(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Name = styled.p`\n  font-size: 18px;\n`;\nexport const Number = styled.p``;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Name, Number } from \"./ContactItem.styled\";\n\nfunction ContactItem({ contact }) {\n  return (\n    <>\n      <Name>{contact.name}</Name>\n      <Number>{contact.number}</Number>\n    </>\n  );\n}\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\nexport default ContactItem;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n`;\nexport const Item = styled.li`\n  padding: 5px;\n  margin-right: 40px;\n`;\n","import { connect } from \"react-redux\";\nimport { deleteContact } from \"../../redux/actions/contacts\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport PropTypes from \"prop-types\";\nimport Button from \"../Utils/Button/Button\";\nimport { MdDeleteForever } from \"react-icons/md\";\nimport { List, Item } from \"./Contacts.styled\";\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <>\n      <List>\n        {contacts.map((contact) => (\n          <Item key={contact.id}>\n            <ContactItem contact={contact} />\n            <Button\n              title=\"Remove from contacts\"\n              text={<MdDeleteForever color=\"#ff4f4f\" size={30} />}\n              type=\"button\"\n              onClick={() => onDeleteContact(contact.id)}\n            />\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst filterByName = (state) => {\n  return state.contacts.items.filter((contact) =>\n    contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: filterByName(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContact: (id) => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { filterContact } from \"../../redux/actions/contacts\";\nimport PropTypes from \"prop-types\";\nimport Title from \"../Utils/Title/Title\";\nimport Input from \"../Utils/Input/Input\";\n\nfunction Filter({ value, onChange }) {\n  return (\n    <>\n      <Title size={18} text=\"Find Contacts by name\" />\n      <Input\n        placeholder=\"type to find contacts...\"\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  value: state.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(filterContact(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  padding: 15px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import React from \"react\";\nimport { Wrapper } from \"./Container.styled\";\n\nfunction Container({ children }) {\n  return <Wrapper>{children}</Wrapper>;\n}\n\nexport default Container;\n","import ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport Container from \"./Components/Utils/Container/Container\";\nimport Title from \"./Components/Utils/Title/Title\";\n\nfunction App() {\n  // useEffect(() => {\n  //   const contacts = localStorage.getItem(\"contacts\");\n  //   const parsedContacts = JSON.parse(contacts);\n\n  //   if (parsedContacts) {\n  //     setContacts(parsedContacts);\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  //   if (contacts.length === 0) {\n  //     localStorage.removeItem(\"contacts\");\n  //   }\n  // }, [contacts]);\n\n  return (\n    <Container>\n      <Title color=\"#424242\" size={30} text=\"Phonebook\" />\n      <div\n        style={{\n          border: \"1px solid gray\",\n          width: \"fit-content\",\n          padding: \"20px\",\n        }}\n      >\n        <ContactForm />\n      </div>\n      <Filter />\n      <Title marginT={40} size={20} text=\"Contacts\" />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}