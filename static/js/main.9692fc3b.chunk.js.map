{"version":3,"sources":["redux/actions/contacts.js","redux/reducers/filter.js","services/contacts-api.js","redux/operations/index.js","redux/reducers/contacts.js","redux/reducers/index.js","redux/store.js","Components/ContactForm/ContactForm.styled.jsx","Components/Utils/Button/Button.styled.jsx","Components/Utils/Button/Button.jsx","Components/Utils/Title/Title.styled.jsx","Components/Utils/Title/Title.jsx","Components/Utils/Input/Input.styled.jsx","Components/Utils/Input/Input.jsx","Components/ContactForm/ContactForm.jsx","Components/ContactItem/ContactItem.styled.jsx","Components/ContactItem/ContactItem.jsx","Components/ContactList/Contacts.styled.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Components/Utils/Container/Container.styled.jsx","Components/Utils/Container/Container.jsx","App.js","index.js"],"names":["filterContact","createAction","data","payload","id","nextId","name","number","filterReducer","createReducer","state","action","getContacts","a","axios","get","createContact","contact","post","removeContact","delete","fetchContacts","createAsyncThunk","addContact","deleteContact","entities","fulfilled","_","filter","isLoading","pending","rejected","error","combineReducers","contactsReducer","configureStore","reducer","contacts","Form","styled","form","Btn","button","Button","text","onClick","title","PageTitle","h2","props","size","color","marginR","marginL","marginT","Title","Field","input","Input","value","type","onChange","placeholder","ContactForm","useState","setName","setNumber","dispatch","useDispatch","useSelector","handleChange","e","target","onSubmit","preventDefault","find","toLowerCase","alert","pattern","required","Name","p","Number","ContactItem","List","ul","Item","li","ContactList","useEffect","map","connect","Wrapper","div","Container","children","App","style","border","width","padding","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.9692fc3b.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\nimport nextId from \"react-id-generator\";\n\nexport const addContact = createAction(\"contacts/add\", (data) => ({\n  payload: {\n    id: nextId(),\n    name: data.name,\n    number: data.number,\n  },\n}));\n\nexport const deleteContact = createAction(\"contacts/delete\");\n\nexport const filterContact = createAction(\"contacts/filter\");\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { filterContact } from \"../actions/contacts\";\n// import { FILTER_CONTACT } from \"../types\";\n\n// const filterReducer = (state = \"\", action) => {\n//   switch (action.type) {\n//     case FILTER_CONTACT:\n//       return action.payload;\n//     default:\n//       return state;\n//   }\n// };\n\nconst filterReducer = createReducer(\"\", {\n  [filterContact]: (state, action) => action.payload,\n});\n\nexport default filterReducer;\n","import axios from \"axios\";\n\nexport const getContacts = async () => {\n  const { data } = await axios.get(\"http://localhost:7777/contacts\");\n  return data;\n};\n\nexport const createContact = async (contact) => {\n  const { data } = await axios.post(\"http://localhost:7777/contacts\", contact);\n  return data;\n};\n\nexport const removeContact = async (id) => {\n  await axios.delete(`http://localhost:7777/contacts/${id}`);\n  return id;\n};\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport {\n  getContacts,\n  createContact,\n  removeContact,\n} from \"../../services/contacts-api\";\n\nexport const fetchContacts = createAsyncThunk(\n  \"contacts/fetchContacts\",\n  async () => await getContacts()\n);\n\nexport const addContact = createAsyncThunk(\n  \"contacts/addContact\",\n  async (contact) => await createContact(contact)\n);\nexport const deleteContact = createAsyncThunk(\n  \"contacts/deleteContact\",\n  async (id) => await removeContact(id)\n);\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\n// import { addContact, deleteContact } from \"../actions/contacts\";\nimport { fetchContacts, addContact, deleteContact } from \"../operations\";\nconst initialState = [];\n\n// const contactsReducer = createReducer(initialState, {\n//   [addContact]: (state, action) => [...state, action.payload],\n//   [deleteContact]: (state, action) =>\n//     state.filter((contact) => action.payload !== contact.id),\n// });\nconst entities = createReducer(initialState, {\n  [fetchContacts.fulfilled]: (_, action) => [...action.payload],\n  [addContact.fulfilled]: (state, action) => [...state, action.payload],\n  [deleteContact.fulfilled]: (state, action) =>\n    state.filter((contact) => contact.id !== action.payload),\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.pending]: () => null,\n  [addContact.rejected]: (_, action) => action.payload,\n  [addContact.pending]: () => null,\n  [deleteContact.rejected]: (_, action) => action.payload,\n  [deleteContact.pending]: () => null,\n});\n\n// const addContactReducer = createReducer([], {\n//   [addContact.fulfilled]: (state, action) => [...state, ...action.payload],\n// });\n\nexport default combineReducers({\n  entities,\n  isLoading,\n  error,\n});\n// export default contactsReducer;\n","import { combineReducers } from \"redux\";\n\nimport filterReducer from \"./filter\";\nimport contactsReducer from \"./contacts\";\n\nexport default combineReducers({\n  contactsReducer,\n  filterReducer,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./reducers/index\";\n\nexport default configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n});\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: flex;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Btn = styled.button`\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport { Btn } from \"./Button.styled\";\n\nfunction Button({ text, onClick, title }) {\n  return (\n    <Btn title={title} onClick={onClick}>\n      {text}\n    </Btn>\n  );\n}\n\nexport default Button;\n","import styled from \"@emotion/styled\";\n\nexport const PageTitle = styled.h2`\n  font-size: ${(props) => props.size}px;\n  color: ${(props) => props.color};\n  margin-right: ${(props) => props.marginR}px;\n  margin-left: ${(props) => props.marginL}px;\n  margin-top: ${(props) => props.marginT}px;\n`;\n","import React from \"react\";\nimport { PageTitle } from \"./Title.styled\";\n\nfunction Title({ marginT, marginR, marginL, text, size, color }) {\n  return (\n    <PageTitle\n      marginT={marginT}\n      marginR={marginR}\n      marginL={marginL}\n      color={color}\n      size={size}\n    >\n      {text}\n    </PageTitle>\n  );\n}\n\nexport default Title;\n","import styled from \"@emotion/styled\";\n\nexport const Field = styled.input`\n  width: 300px;\n  border: none;\n  border-bottom: 1px solid gray;\n  background-color: transparent;\n\n  &:hover {\n    border-bottom: 1px solid #000d59;\n  }\n`;\n","import React from \"react\";\nimport { Field } from \"./Input.styled\";\n\nfunction Input({ value, type, name, onChange, placeholder }) {\n  return (\n    <Field\n      placeholder={placeholder}\n      value={value}\n      type={type}\n      name={name}\n      onChange={onChange}\n    />\n  );\n}\n\nexport default Input;\n","import { useState } from \"react\";\n// import { connect } from \"react-redux\";\n// import { addContact } from \"../../redux/actions/contacts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addContact } from \"../../redux/operations\";\nimport { Form } from \"./ContactForm.styled\";\nimport { MdPersonAdd } from \"react-icons/md\";\nimport Button from \"../Utils/Button/Button\";\nimport Title from \"../Utils/Title/Title\";\nimport Input from \"../Utils/Input/Input\";\n\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const dispatch = useDispatch();\n  const contacts = useSelector(\n    (state) => state.contacts.contactsReducer.entities\n  );\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const checkOnSameContact = contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (checkOnSameContact) {\n      alert(`${name} is already in contacts`);\n      setName(\"\");\n      setNumber(\"\");\n      return;\n    }\n    if (name === \"\" && number === \"\") {\n      alert(\"Please fill empty fields\");\n      return;\n    }\n    if (name === \"\" || number === \"\") {\n      alert(\"Please fill empty fields\");\n      return;\n    }\n\n    // onSubmit({ name, number });\n    dispatch(addContact({ name, number }));\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Title marginR={15} size={18} text=\"Name\" />\n      <Input\n        placeholder=\"type name...\"\n        value={name}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChange}\n      />\n      <Title marginR={15} marginL={30} size={18} text=\"Number\" />\n      <Input\n        placeholder=\"type number...\"\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        onChange={handleChange}\n      />\n      <Button\n        title=\"Add to contacts\"\n        text={<MdPersonAdd size={50} color=\"#187bcd\" />}\n        size={20}\n        type=\"submit\"\n      />\n    </Form>\n  );\n}\n\n// const mapStateToProps = (state) => ({\n//   contacts: state.contacts.items,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onSubmit: (data) => dispatch(addContact(data)),\n// });\nexport default ContactForm;\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from \"@emotion/styled\";\n\nexport const Name = styled.p`\n  font-size: 18px;\n`;\nexport const Number = styled.p``;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Name, Number } from \"./ContactItem.styled\";\n\nfunction ContactItem({ contact }) {\n  return (\n    <>\n      <Name>{contact.name}</Name>\n      <Number>{contact.number}</Number>\n    </>\n  );\n}\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\nexport default ContactItem;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n`;\nexport const Item = styled.li`\n  padding: 5px;\n  margin-right: 40px;\n`;\n","// import { connect } from \"react-redux\";\n// import { deleteContact } from \"../../redux/actions/contacts\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts, deleteContact } from \"../../redux/operations\";\nimport PropTypes from \"prop-types\";\n\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport Button from \"../Utils/Button/Button\";\nimport { MdDeleteForever } from \"react-icons/md\";\nimport { List, Item } from \"./Contacts.styled\";\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(\n    (state) => state.contacts.contactsReducer.entities\n  );\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = (id) => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <>\n      <List>\n        {contacts.map((contact) => (\n          <Item key={contact.id}>\n            <ContactItem contact={contact} />\n            <Button\n              title=\"Remove from contacts\"\n              text={<MdDeleteForever color=\"#ff4f4f\" size={30} />}\n              type=\"button\"\n              onClick={() => onDeleteContact(contact.id)}\n            />\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n\n// const filterByName = (state) => {\n//   return state.contacts.items.entities.filter((contact) =>\n//     contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\n//   );\n// };\n\n// const mapStateToProps = (state) => ({\n//   contacts: filterByName(state),\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onDeleteContact: (id) => dispatch(deleteContact(id)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { filterContact } from \"../../redux/actions/contacts\";\nimport PropTypes from \"prop-types\";\nimport Title from \"../Utils/Title/Title\";\nimport Input from \"../Utils/Input/Input\";\n\nfunction Filter({ value, onChange }) {\n  return (\n    <>\n      <Title size={18} text=\"Find Contacts by name\" />\n      <Input\n        placeholder=\"type to find contacts...\"\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  value: state.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(filterContact(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  padding: 15px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import React from \"react\";\nimport { Wrapper } from \"./Container.styled\";\n\nfunction Container({ children }) {\n  return <Wrapper>{children}</Wrapper>;\n}\n\nexport default Container;\n","import ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport Container from \"./Components/Utils/Container/Container\";\nimport Title from \"./Components/Utils/Title/Title\";\n\nfunction App() {\n  // useEffect(() => {\n  //   const contacts = localStorage.getItem(\"contacts\");\n  //   const parsedContacts = JSON.parse(contacts);\n\n  //   if (parsedContacts) {\n  //     setContacts(parsedContacts);\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  //   if (contacts.length === 0) {\n  //     localStorage.removeItem(\"contacts\");\n  //   }\n  // }, [contacts]);\n\n  return (\n    <Container>\n      <Title color=\"#424242\" size={30} text=\"Phonebook\" />\n      <div\n        style={{\n          border: \"1px solid gray\",\n          width: \"fit-content\",\n          padding: \"20px\",\n        }}\n      >\n        <ContactForm />\n      </div>\n      <Filter />\n      <Title marginT={40} size={20} text=\"Contacts\" />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}